import Head from 'next/head'
import ImageWithFallback from '../components/imageWithFallback'
import styles from '../styles/Home.module.css'
import { ApolloClient, InMemoryCache, gql } from '@apollo/client';


export default function Home({ launches }) {
  console.log('launches', launches);
  const fbSrc = "https://live.staticflickr.com/65535/50631643917_cb7db291d0_o.jpg"

  const myLoader = ({ src, width, quality }) => {
    return `${src}?w=${width}&q=${quality || 75}`
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>SpaceX lauches</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          SpaceX Launches
        </h1>

        <p className={styles.description}>
         Latest launches from SpaceX
        </p>

        <div className={styles.grid}>
          {launches.map(launch => {
            console.log(launch.links.flickr_images[0])
            return (
              <a key={launch.id} href={launch.links.video_link} className={styles.card}>
                <div style={{textAlign: 'center'}}>
                  <ImageWithFallback
                    priority
                    placeholder="blur"
                    blurDataURL
                    src={launch.links.flickr_images[0]}
                    fallbackSrc={fbSrc}
                    height={144}
                    width={144}
                    alt={launch.mission_name}
                    />
                </div>
                <h3>{ launch.mission_name }</h3>
                <p><strong>Launch Date:</strong> { new Date(launch.launch_date_local).toLocaleDateString("en-US") }</p>
              </a>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <a>
          Made by Jules Docx @freecodingcamp(ðŸ”¥)
        </a>
      </footer>
    </div>
  )
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: 'https://api.spacex.land/graphql/',
    cache: new InMemoryCache()
  });

  const { data } = await client.query({
    query: gql`
      query GetLaunches {
        launchesPast(limit: 10) {
          id
          mission_name
          launch_date_local
          launch_site {
            site_name_long
          }
          links {
            article_link
            video_link
            mission_patch
            flickr_images
          }
          rocket {
            rocket_name
          }
        }
      }
    `
  });

  return {
    props: {
      launches: data.launchesPast
    }
  }
}
